{"name":"Jiero.github.io","tagline":"培养和放弃 Give Up T.H.E. (THOSE HATE ENGINEERING)","body":"###  欢迎到了我的主页\r\n\r\n我在这里保存一些链接，可能以后更成为博客，但那是另外的事情了。\r\n\r\n###  当前我使用页面生成工具\r\n\r\n自动页面生成工具是最简单的页面制作方式，它能帮你排版出简易又漂亮的页面。\r\n\r\n作为作者，你可以使用Github喜爱的标注方式，选择一个被设计师精工的模板，放出你的文章。\r\n\r\n页面生成后你可以看看下面的分支： \r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n若是 GitHub  Mac 轻松同步即出现新分支\r\n \r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact \r\nsupport@github.com and we’ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}